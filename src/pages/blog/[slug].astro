---
import bookmarkPlugin from "@notion-render/bookmark-plugin";
import { NotionRenderer } from "@notion-render/client";
import hljsPlugin from "@notion-render/hljs-plugin";
import type { GetStaticPaths } from "astro";
import { NOTION_POSTS_DB } from "astro:env/server";
import {
  getPageBySlug,
  getPageContent,
  getPages,
  notionClient,
} from "../../actions/DB";

// This only runs suring the build time of the pages, it gets all the available slugs
export const getStaticPaths = (async () => {
  return await getPages({
    databaseID: NOTION_POSTS_DB,
    // We want to build all the pages, for viewing and testing, the link for the user
    // to navigate to the post will not be created.
    publishedOnly: false,
  }).then((data) =>
    data.results
      //@ts-expect-error: Notion does not supply a full type coverage for it's tables
      .map(({ properties }) => {
        return {
          params: {
            slug: properties.Slug.rich_text[0].plain_text as string,
          },
        };
      })
  );
}) satisfies GetStaticPaths;

const { slug } = Astro.params as {
  slug: string;
};

// only runs during build time, fetch all the post content by slug
const post = await getPageBySlug(slug as string, NOTION_POSTS_DB);
if (!post) {
  return {
    status: 404,
    error: new Error(`Post not found`),
  };
}
// @ts-ignore: Notion does not supply a full type coverage for it's tables
const title = post.properties.Title.title[0].plain_text;
// @ts-ignore: Notion does not supply a full type coverage for it's tables
const image = post.properties.BannerImage.url;
const content = await getPageContent(post.id);

const notionRenderer = new NotionRenderer({
  client: notionClient,
});

await notionRenderer.use(hljsPlugin({}));
await notionRenderer.use(bookmarkPlugin(undefined));
const html = await notionRenderer.render(...content);
---

<html lang="en" dir="ltr">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
  </head>
  <body>
    <article class="mb-10 flex w-full flex-col items-center px-2 pt-10">
      <h1 class="mb-8 text-6xl font-black capitalize">{title}</h1>
      <img alt="Blog Image" src={image} class="[width: 800px]!" />
      <div
        class="mt-4 max-w-4xl space-y-6 text-xl leading-10 prose lg:prose-xl
            prose-headings:font-bold prose-headings:text-pacamara-accent
            prose-p:text-pacamara-primary/70 lg:prose-p:text-[18px] prose-p:transition-all prose-p:duration-300
            prose-a:font-semibold prose-a:text-pacamara-dark prose-a:hover:text-pacamara-pink prose-a:no-underline prose-a:transition-all prose-a:duration-300
            prose-strong:font-normal
            prose-headings:font-pacamara-space prose-h2:mb-7
            dark:prose-a:text-white dark:prose-a:hover:text-pacamara-accent dark:prose-p:text-white/70"
        set:html={html}
      />
    </article>
  </body>
</html>

<style is:global>
  .card {
    @apply flex flex-col items-center gap-4 border-2 border-solid border-gray-500 rounded-2xl p-4 shadow-xl shadow-sky-400/20 dark:shadow-sky-800/20 bg-slate-200 dark:bg-slate-700;
  }
  h1 {
    @apply text-4xl font-bold;
  }
  h2 {
    @apply text-2xl font-semibold;
  }
  section {
    @apply my-4 flex flex-col gap-4 justify-start align-middle w-full;
  }
  *,
  *::before,
  *::after {
    box-sizing: border-box;
  }
  body {
    @apply min-h-full p-4 text-slate-900 dark:text-slate-100 bg-slate-50 dark:bg-slate-900;
  }
  ::-webkit-scrollbar {
    @apply w-3;
  }

  ::-webkit-scrollbar-track {
    @apply bg-purple-700 dark:bg-purple-500 bg-opacity-20;
  }

  ::-webkit-scrollbar-thumb {
    @apply bg-purple-500 dark:bg-purple-700 bg-opacity-20 dark:bg-opacity-100 shadow-2xl rounded-full;
  }

  /** Shiki theme - Light/Dark mode **/
  :root {
    --astro-code-color-text: #24292f;
    --astro-code-color-background: #ffffff;
    --astro-code-token-constant: #0550ae;
    --astro-code-token-string: #24292f;
    --astro-code-token-comment: #6e7781;
    --astro-code-token-keyword: #cf222e;
    --astro-code-token-parameter: #24292f;
    --astro-code-token-function: #8250df;
    --astro-code-token-string-expression: #0a3069;
    --astro-code-token-punctuation: #24292f;
    --astro-code-token-link: #000012;
  }

  html.dark {
    --astro-code-color-text: #c9d1d9;
    --astro-code-color-background: #0d1117;
    --astro-code-token-constant: #79c0ff;
    --astro-code-token-string: #a5d6ff;
    --astro-code-token-comment: #8b949e;
    --astro-code-token-keyword: #ff7b72;
    --astro-code-token-parameter: #c9d1d9;
    --astro-code-token-function: #d2a8ff;
    --astro-code-token-string-expression: #a5d6ff;
    --astro-code-token-punctuation: #c9d1d9;
    --astro-code-token-link: #000012;
  }
</style>

<style is:global>
  .notion-heading_1 {
    @apply text-4xl font-bold my-2;
  }

  .notion-heading_2 {
    @apply text-3xl font-bold my-1;
  }

  .notion-heading_3 {
    @apply text-2xl font-bold mb-5;
  }

  .notion-heading_4 {
    @apply text-xl font-bold;
  }

  .notion-heading_5 {
    @apply text-lg font-bold;
  }

  .notion-heading_6 {
    @apply text-base font-bold;
  }

  .notion-bulleted_list {
    @apply list-disc pr-4 pl-6;
  }

  summary {
    @apply cursor-pointer;
  }

  p {
    @apply text-lg mt-0;
  }

  pre {
    @apply my-0;
  }

  .notion-code {
    @apply rounded-md dark:bg-gray-200 bg-gray-200 px-4 py-0 text-sm mb-2 mt-2 overflow-auto;
    direction: ltr;
  }

  .notion-text-href {
    @apply text-blue-500 dark:text-blue-300 underline visited:text-violet-600 visited:dark:text-violet-400 hover:text-blue-600 hover:dark:text-blue-400 visited:hover:text-violet-600 visited:hover:dark:text-violet-400;
  }

  .notion-quote {
    @apply pr-4 mb-5 mt-5 italic text-gray-500 dark:text-gray-400;
  }

  .hljs-keyword {
    @apply font-semibold text-purple-700 dark:text-purple-300;
  }

  .hljs-string {
    @apply text-green-600 dark:text-green-300;
  }

  .hljs-title.function_,
  .hljs-title.class_ {
    @apply font-semibold text-red-300 dark:text-red-300;
  }

  .hljs-attr {
    @apply text-indigo-600 dark:text-indigo-400;
  }

  .hljs-comment {
    @apply italic text-gray-500 dark:text-gray-400;
  }

  .hljs-name {
    @apply text-teal-200 dark:text-teal-200;
  }

  .notion-text-bold {
    @apply font-bold;
  }

  .notion-text-code {
    @apply inline-block rounded dark:bg-gray-200 bg-gray-400 px-2;
    direction: ltr;
  }

  .notion-heading_1 {
    @apply mb-4 mt-5 font-bold;
  }

  .notion-numbered_list .notion-numbered_list_item::marker {
    @apply text-slate-900 dark:text-slate-100;
  }

  .notion-numbered_list {
    @apply list-decimal pl-6;
  }

  .notion-numbered_list_item {
    @apply mb-2;
  }

  .notion-color-default {
    @apply text-gray-800 dark:text-gray-300;
  }

  .notion-bulleted_list_item {
    @apply mb-2;
  }

  .notion-image {
    @apply mb-5 mt-5;
  }

  .notion-image > img {
    @apply rounded-lg;
  }

  .notion-color-yellow_background {
    @apply bg-yellow-100 dark:bg-yellow-800;
  }

  .notion-color-red_background {
    @apply bg-red-100 dark:bg-red-800;
  }

  .notion-color-blue_background {
    @apply bg-blue-100 dark:bg-blue-800;
  }

  .notion-color-green_background {
    @apply bg-green-100 dark:bg-green-800;
  }

  .notion-color-gray_background {
    @apply bg-gray-100 dark:bg-gray-800;
  }

  .notion-color_orange_background {
    @apply bg-orange-100 dark:bg-orange-800;
  }

  .notion-color_purple_background {
    @apply bg-purple-100 dark:bg-purple-800;
  }
</style>
